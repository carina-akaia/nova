[package]
name = "akaia_commlink_platform"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1"
http = { version = "1.0.0", optional = true }
leptos = { version = "0.6.14", features = ["nightly", "experimental-islands"] }
leptos_meta = { version = "0.6.14", features = ["nightly"] }
leptos_actix = { version = "0.6.14", optional = true, features = [
	"experimental-islands",
] }
leptos_query = { version = "0.5.3", features = ["local_storage"] }
leptos_router = { version = "0.6.14", features = ["nightly"] }
leptos_server_signal = "0.6.0"
leptos-use = "0.12.0"
serde = { version = "*", features = ["derive"] }
wasm-bindgen = "=0.2.93"
leptos_query_devtools = "0.1.3"
near-api-lib = { version = "0.1.0-alpha", optional = true }
serde_json = "1.0.117"
near-primitives = { version = "0.22.0", optional = true }
leptos_declarative = "0.3.0"
leptos-tracked = "0.1.4"
cfg-if = "1.0.0"
custom-elements = "0.2.1"
surrealdb = "1.4.2"

[features]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr"]
hydrate = [
	"leptos/hydrate",
	"leptos_meta/hydrate",
	"leptos_router/hydrate",
	"leptos_query/hydrate",
	"leptos_query_devtools/csr",
]
ssr = [
	"dep:near-api-lib",
	"dep:near-primitives",
	"dep:actix-files",
	"dep:actix-web",
	"dep:leptos_actix",
	"leptos/ssr",
	"leptos_meta/ssr",
	"leptos_query/ssr",
	"leptos_router/ssr",
	"leptos_server_signal/ssr",
	"leptos_server_signal/actix",
	"leptos-use/ssr",
]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
# output-name = "akaia-commlink"

# The site root folder is where cargo-leptos generate all output.
# WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "../.target/web"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "app"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "src/app/global.css"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "0.0.0.0:1337"

# The port to use for automatic reload monitoring
reload-port = 1338

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
# end2end-cmd = "npx playwright test"
# end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate", "csr"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"

reload-ws-protocol = "wss"
